<UserControl x:Class="HFQOViews.HFQPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HFQOViews"
             xmlns:vm="clr-namespace:HFQOVM;assembly=HFQOVM"
             xmlns:viewsbase="clr-namespace:ViewsBase;assembly=ViewsBase"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="350"
             DataContext="{x:Static vm:ViewModelLocator.HFQ}"
             d:DataContext="{d:DesignInstance Type=vm:HFQVM}">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ViewsBase;component/Styles.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <viewsbase:GreenRedConverter x:Key="GreenRedConverter" />
      <viewsbase:GreenGrayConverter x:Key="GreenGrayConverter" />
      <viewsbase:LoggedInStatusConverter x:Key="LoggedInStatusConverter" />
      <viewsbase:ConnectionStatusConverter x:Key="ConnectionStatusConverter" />

      <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
      <CollectionViewSource x:Key="QACVS" Source="{Binding XMLDoc.QAs}" IsLiveFilteringRequested="True" Filter="CollectionViewSource_Filter" />

      <Style TargetType="Button" BasedOn="{StaticResource BlueButton}">
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="6" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid Grid.Row="0">
      <TextBox x:Name="SearchBox" BorderThickness="1" Text="{Binding SearchText}"
             ToolTip="Enter search terms and press ENTER" Padding="6" Margin="3" Height="40" VerticalContentAlignment="Center"
               KeyDown="SearchBox_KeyDown">
        <viewsbase:WatermarkService.Watermark>
          <TextBlock Text="Search" />
        </viewsbase:WatermarkService.Watermark>
      </TextBox>
      <Button Padding="3" Click="ClearButton_Click" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Margin="28,6" ToolTip="Clear search text" Width="Auto">
        <Image Source="Resources/Close-WF.png" Width="12" VerticalAlignment="Center" />
      </Button>
      <Button Padding="3" Grid.Column="1" Click="SearchButton_Click" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Margin="6" ToolTip="Search" Width="Auto">
        <Image Source="Resources/Search-WF.png" Width="16" Height="16" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Right" />
      </Button>
    </Grid>

    <ListBox ItemsSource="{Binding Source={StaticResource QACVS}}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" Padding="0" Margin="3">
      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <EventSetter Event="MouseUp" Handler="ListBoxItem_MouseUp" />
        </Style>
      </ListBox.ItemContainerStyle>
      <ListBox.ItemTemplate>
        <DataTemplate DataType="vm:QA">
          <Border Background="WhiteSmoke" CornerRadius="2" BorderThickness="1" BorderBrush="Gray" Padding="6" MaxHeight="130" Margin="3">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <TextBlock FontWeight="Bold">
                Question 
                <Run Text="{Binding Index}" />
              </TextBlock>
              <TextBlock Grid.Row="1" Text="{Binding Question}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />

              <Button Content="Mark" Grid.Row="2" Margin="3,6,3,3" HorizontalAlignment="Right" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.MarkCommand}"
                      CommandParameter="{Binding}" />
            </Grid>
          </Border>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>

    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="6" HorizontalAlignment="Center">
      <Button Content="&lt; Prev" Command="{Binding GoToPreviousCommand}" Margin="3" />
      <Button Content="Next &gt;" Command="{Binding GoToNextCommand}" Margin="3" />
    </StackPanel>

      <Grid Background="Gray" HorizontalAlignment="Stretch" Grid.Row="3" Margin="3,3,3,0">
      <Grid Margin="4,0">
      <Grid.Resources>
        <Style TargetType="TextBlock">
          <Setter Property="HorizontalAlignment" Value="Center" />
          <Setter Property="VerticalAlignment" Value="Center" />
          <Setter Property="FontSize" Value="16" />
          <Setter Property="Margin" Value="3" />
          <Setter Property="Foreground" Value="White" />
        </Style>
      </Grid.Resources>
        
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="150" />
          <ColumnDefinition Width="50" />
          <ColumnDefinition Width="50" />
          <ColumnDefinition Width="50" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TextBlock Text="Question" HorizontalAlignment="Left" />
      <TextBlock Text="A1" Grid.Column="1" />
      <TextBlock Text="A2" Grid.Column="2" />
      <TextBlock Text="A3" Grid.Column="3" />
      </Grid>
    </Grid>

    <ListBox ItemsSource="{Binding Result}" SelectedIndex="{Binding SelectedResultIndex}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="4" Padding="0" Margin="3,0,3,3">
      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
      </ListBox.ItemContainerStyle>
      <ListBox.ItemTemplate>
        <DataTemplate DataType="vm:HFQResultRowVM">
          <Grid>
            <Grid.Resources>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="3,0" />
              </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="150" />
              <ColumnDefinition Width="50" />
              <ColumnDefinition Width="50" />
              <ColumnDefinition Width="50" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" HorizontalAlignment="Left">
              Q<Run Text="{Binding Q, FallbackValue=123}" />
            </TextBlock>

            <TextBlock Grid.Column="1" Text="{Binding A1, FallbackValue=38}" />
            <TextBlock Grid.Column="2" Text="{Binding A2, FallbackValue=156}" Foreground="Orange" />
            <TextBlock Grid.Column="3" Text="{Binding A3, FallbackValue=221}" Foreground="Red" />

            <Button Padding="0" Grid.Column="4" HorizontalAlignment="Right" Margin="6,3" ToolTip="Remove answer" Width="16" Height="16" Background="Red" SnapsToDevicePixels="True"
                    Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RemoveLastAnswerCommand}" CommandParameter="{Binding}">
              <fa:ImageAwesome Icon="Remove" Foreground="White" Width="8" Height="8" />
            </Button>
          </Grid>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>

    <StatusBar Grid.Row="5" Height="30">
      <StatusBar.ItemsPanel>
        <ItemsPanelTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ItemsPanelTemplate>
      </StatusBar.ItemsPanel>

      <StatusBarItem Grid.Column="0" HorizontalContentAlignment="Stretch">
        <Border BorderBrush="Gainsboro" BorderThickness="0,0,1,1">
          <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0" HorizontalAlignment="Stretch">
            <TextBlock Text="{Binding ProgressMessage, Mode=OneWay, FallbackValue=Ready}" />
          </Border>
        </Border>
      </StatusBarItem>

      <StatusBarItem Grid.Column="1">
        <Border BorderBrush="Gainsboro" BorderThickness="0,0,1,1" Margin="1,0" Grid.Column="1">
          <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0">
            <ProgressBar Value="{Binding ProgressValue, Mode=OneWay}" Maximum="100" Width="100" Height="10" Margin="3" />
          </Border>
        </Border>
      </StatusBarItem>

      <StatusBarItem Grid.Column="2">
        <Border BorderBrush="Gainsboro" BorderThickness="0,0,1,1" Margin="1,0" Grid.Column="2">
          <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0">

            <fa:ImageAwesome Width="16" Height="16" Icon="Camera" HorizontalAlignment="Right" Margin="3" SnapsToDevicePixels="True">
              <fa:ImageAwesome.Foreground>
                <SolidColorBrush Color="{Binding IsWatching, Converter={StaticResource GreenGrayConverter}, FallbackValue=Gray}" />
              </fa:ImageAwesome.Foreground>
              <fa:ImageAwesome.Style>
                <Style TargetType="fa:ImageAwesome">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsWatching, Mode=OneWay}" Value="True">
                      <Setter Property="ToolTip" Value="Snapshots status: Active" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding IsWatching}" Value="False">
                      <Setter Property="ToolTip" Value="Snapshots status: Disabled" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </fa:ImageAwesome.Style>
            </fa:ImageAwesome>
          </Border>
        </Border>
      </StatusBarItem>
      
      <StatusBarItem Grid.Column="3" DataContext="{Binding Source={x:Static vm:ViewModelLocator.Auth}}">
        <Border BorderBrush="Gainsboro" BorderThickness="0,0,1,1" Margin="1,0" Grid.Column="2">
          <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0">

            <Ellipse Width="12" Height="12" Stroke="Gray" HorizontalAlignment="Right" Margin="3">
              <Ellipse.Fill>
                <SolidColorBrush Color="{Binding IsLoggedIn, Converter={StaticResource GreenRedConverter}, FallbackValue=Red}" />
              </Ellipse.Fill>
              <Ellipse.Style>
                <Style TargetType="Ellipse">
                  <Style.Resources>
                    <Storyboard x:Key="ConnectingStoryBoard" RepeatBehavior="Forever">
                      <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" />
                      <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" BeginTime="0:0:1" />
                    </Storyboard>
                  </Style.Resources>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsCommunicating, Mode=OneWay}" Value="True">
                      <Setter Property="ToolTip" Value="Connection Status: Communicating" />
                      <DataTrigger.EnterActions>
                        <BeginStoryboard Name="ConnectingStoryBoardBegin" Storyboard="{StaticResource ConnectingStoryBoard}" />
                      </DataTrigger.EnterActions>
                      <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="ConnectingStoryBoardBegin" />
                      </DataTrigger.ExitActions>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding IsCommunicating}" Value="False">
                      <Setter Property="ToolTip" Value="{Binding IsLoggedIn, Converter={StaticResource LoggedInStatusConverter}}" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Ellipse.Style>
              <Ellipse.Effect>
                <DropShadowEffect Color="{Binding IsLoggedIn, Converter={StaticResource GreenRedConverter}, FallbackValue=Red}" BlurRadius="7" Direction="90" ShadowDepth="0" />
              </Ellipse.Effect>
            </Ellipse>
          </Border>
        </Border>
      </StatusBarItem>

      <StatusBarItem Grid.Column="4" DataContext="{Binding Source={x:Static vm:ViewModelLocator.Auth}}" ToolTip="{Binding IsConnected, Converter={StaticResource ConnectionStatusConverter}}">
        <Border BorderBrush="Gainsboro" BorderThickness="0,0,1,1" Margin="1,0" Grid.Column="2">
          <Border BorderBrush="DarkGray" BorderThickness="1,1,0,0">

            <fa:ImageAwesome Width="16" Height="16" Margin="3">
              <fa:ImageAwesome.Style>
                <Style TargetType="fa:ImageAwesome">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                      <Setter Property="Icon" Value="Link" />
                      <Setter Property="Foreground" Value="Green" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding IsConnected}" Value="False">
                      <Setter Property="Icon" Value="Unlink" />
                      <Setter Property="Foreground" Value="Red" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </fa:ImageAwesome.Style>
            </fa:ImageAwesome>
          </Border>
        </Border>
      </StatusBarItem>

    </StatusBar>
  </Grid>
</UserControl>